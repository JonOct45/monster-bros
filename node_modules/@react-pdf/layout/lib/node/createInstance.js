"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

exports.__esModule = true;
exports.default = void 0;

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _fns = require("@react-pdf/fns");

var _primitives = require("@react-pdf/primitives");

var _excluded = ["style", "children"];

var isString = function isString(value) {
  return typeof value === 'string';
};

var isNumber = function isNumber(value) {
  return typeof value === 'number';
};
/**
 * Transforms a react element instance to internal element format
 *
 * @param {Object} React element
 * @returns {Object} parsed react element
 */


var createInstance = function createInstance(element) {
  if (!element) return null;
  if (isString(element) || isNumber(element)) return {
    type: _primitives.TextInstance,
    value: "" + element
  };
  if (!isString(element.type)) return createInstance(element.type(element.props));
  var type = element.type,
      _element$props = element.props,
      _element$props$style = _element$props.style,
      style = _element$props$style === void 0 ? {} : _element$props$style,
      _element$props$childr = _element$props.children,
      children = _element$props$childr === void 0 ? [] : _element$props$childr,
      props = (0, _objectWithoutPropertiesLoose2.default)(_element$props, _excluded);
  var nextChildren = (0, _fns.castArray)(children).map(createInstance);
  return {
    type: type,
    style: style,
    props: props,
    box: {},
    children: nextChildren
  };
};

var _default = createInstance;
exports.default = _default;